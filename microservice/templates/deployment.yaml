apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "microservice.fullname" . }}
  annotations:
    checksum/config: {{ include (print $.Template.BasePath "/config.yaml") . | sha256sum }}
  labels:
    app: {{ template "microservice.name" . }}
    app.kubernetes.io/name: {{ template "microservice.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/component: microservice
    app.kubernetes.io/part-of: microservice
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    bankdata.dk/service: {{ .Release.Name }}
spec:
  replicas: {{ .Values.replicaCount }}
  revisionHistoryLimit: 5
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: "25%"
      maxSurge: "25%"
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ .Release.Name }}
      app.kubernetes.io/instance: {{ .Release.Name }}
      app.kubernetes.io/component: microservice
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ .Release.Name }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/component: microservice
        bankdata.dk/service: {{ .Release.Name }}
    spec:
      containers:
      - name: {{ template "microservice.name" . }}
{{- if .Values.image }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
{{- end }}
{{- if .Values.openshift }}
{{- if .Values.openshift.registry }}
        image: "{{ .Values.openshift.registry }}/{{ .Values.openshift.imageref }}"
{{- else }}
        image: "{{ .Values.openshift.imageref }}"
{{- end }}
{{- end }}
        ports:
        - name: web
          containerPort: 8080
        env:
{{- if .Values.env }}
{{ toYaml .Values.env | indent 10 }}
{{- end }}
        volumeMounts:
          - name: config-volume
            mountPath: /opt/jboss/config
            readOnly: true
{{- if .Values.extraVolumeMounts }}
{{ toYaml .Values.extraVolumeMounts | indent 10 }}
{{- end }}
        resources:
{{ toYaml .Values.resources | indent 10 }}
        livenessProbe:
          httpGet:
            path: /healthz
            port: web
          initialDelaySeconds: 60
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            path: /healthz
            port: web
          initialDelaySeconds: 60
          timeoutSeconds: 5
{{- if .Values.image.pullSecret }}
      imagePullSecrets:
        - name: {{ .Values.image.pullSecret }}
{{- end }}
      volumes:
        - name: config-volume
          configMap:
            name: {{ template "microservice.fullname" . }}
{{- if .Values.extraVolumes }}
{{ toYaml .Values.extraVolumes | indent 8 }}
{{- end }}
