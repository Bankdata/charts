apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "name" . }}
    helm.sh/chart: {{ include "chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  revisionHistoryLimit: 5
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: "25%"
      maxSurge: "25%"
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      containers:
      - name: {{ template "fullname" . }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        ports:
        - name: web
          containerPort: 3000
        volumeMounts:
        - name: config-volume
          mountPath: "/config"
        - name: secret-volume
          mountPath: "/secret"
        env:
        - name: "WEB_SECRET"
          valueFrom:
            secretKeyRef:
              name: "{{ .Values.secret.name }}"
              value: "{{ .Values.secret.webSecret }}"
        - name: "APP_ID"
          value: "{{ .Values.appId }}"
        - name: "PRIVATE_PEM"
          value: "/secret/private.pem"
        - name: "CONFIG_FILE"
          value: "/config/config.yaml"
        resources:
          limits:
            cpu: 100m
            memory: 100Mi
          requests:
            cpu: 1m
            memory: 20Mi
        livenessProbe:
          httpGet:
            path: /healthz
            port: web
          initialDelaySeconds: 30
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            path: /healthz
            port: web
          initialDelaySeconds: 30
          timeoutSeconds: 5
{{- if .Values.image.pullSecret }}
      imagePullSecrets:
        - name: {{ .Values.image.pullSecret }}
{{- end }}
      volumes:
        - name: config-volume
          configMap:
            name: {{ template "fullname" . }}
            items:
            - key: "config"
              path: "config.yaml"
        - name: secret-volume
          secret:
            secretName: "{{ .Values.secret.name }}"
            items:
            - key: "{{ .Values.secret.privateKey }}"
              path: "private.pem"
